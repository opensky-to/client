{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenSky.API",
    "version": "v1"
  },
  "paths": {
    "/Account/accountOverview": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the user's account overview including profile image.",
        "description": "sushi.at, 11/07/2021.",
        "operationId": "GetAccountOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOverviewApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOverviewApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOverviewApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/linkedAccounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the user's linked accounts.",
        "description": "sushi.at, 11/07/2021.",
        "operationId": "GetLinkedAccounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Updates user's linked accounts.",
        "description": "sushi.at, 11/07/2021.",
        "operationId": "UpdateLinkedAccounts",
        "requestBody": {
          "description": "The linked accounts.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedAccounts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedAccounts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedAccounts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/profileImage/{userId}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get profile image for the specified user ID.",
        "description": "sushi.at, 23/11/2023.",
        "operationId": "GetProfileImage",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the OpenSky user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/users": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get the list of all OpenSky users.",
        "description": "sushi.at, 22/11/2023.",
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/moderatorRole": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Adds or removes the moderator role from the specified user.",
        "description": "sushi.at, 21/11/2023.",
        "operationId": "SetModeratorRole",
        "requestBody": {
          "description": "The moderator role model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModeratorRole"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModeratorRole"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModeratorRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/tokenRenewalCountryVerification/{enableVerification}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Sets the token renewal country verification.",
        "description": "sushi.at, 30/11/2021.",
        "operationId": "SetTokenRenewalCountryVerification",
        "parameters": [
          {
            "name": "enableVerification",
            "in": "path",
            "description": "True to enable, false to disable the verification.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Account/profileImage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Upload profile image.",
        "description": "sushi.at, 12/07/2021.",
        "operationId": "UploadProfileImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "fileUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/{registry}": {
      "get": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Get the aircraft record for the specified registry.",
        "description": "sushi.at, 19/07/2021.",
        "operationId": "GetAircraft",
        "parameters": [
          {
            "name": "registry",
            "in": "path",
            "description": "The registry.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/atAirport/{icao}": {
      "get": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Get the aircraft at a given airport.",
        "description": "sushi.at, 19/07/2021.",
        "operationId": "GetAircraftAtAirport",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The icao of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/myAircraft": {
      "get": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Get the player owned aircraft.",
        "description": "sushi.at, 19/07/2021.",
        "operationId": "GetMyAircraft",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/groundOperations": {
      "put": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Perform ground operations for the specified aircraft.",
        "description": "sushi.at, 20/12/2021.",
        "operationId": "PerformGroundOperations",
        "requestBody": {
          "description": "The operations to be performed (fuel and payload loading).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroundOperations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroundOperations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroundOperations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/purchase": {
      "post": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Purchase specified aircraft.",
        "description": "sushi.at, 19/07/2021.",
        "operationId": "PurchaseAircraft",
        "requestBody": {
          "description": "The purchase aircraft model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseAircraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseAircraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseAircraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/purchaseNew": {
      "post": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Purchase new aircraft.",
        "description": "sushi.at, 14/02/2022.",
        "operationId": "PurchaseNewAircraft",
        "requestBody": {
          "description": "The purchase new aircraft model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseNewAircraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseNewAircraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseNewAircraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/reregister": {
      "put": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Re-register aircraft.",
        "description": "sushi.at, 28/11/2023.",
        "operationId": "ReRegisterAircraft",
        "requestBody": {
          "description": "The re-register data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReRegisterAircraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReRegisterAircraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReRegisterAircraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/searchAroundAirport": {
      "post": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Searches for aircraft around a given airport.",
        "description": "sushi.at, 24/02/2022.",
        "operationId": "SearchAircraftAroundAirport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchAroundAirport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchAroundAirport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchAroundAirport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/searchInCountry": {
      "post": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Searches for aircraft matching the criteria in the specified country.",
        "description": "sushi.at, 27/07/2021.",
        "operationId": "SearchAircraftInCountry",
        "requestBody": {
          "description": "The search.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchInCountry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchInCountry"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSearchInCountry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft/sellToSystem/{registry}": {
      "post": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Sell aircraft back to system.",
        "description": "sushi.at, 23/12/2021.",
        "operationId": "SellAircraftToSystem",
        "parameters": [
          {
            "name": "registry",
            "in": "path",
            "description": "The registry of the aircraft to sell.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Aircraft": {
      "put": {
        "tags": [
          "Aircraft"
        ],
        "summary": "Updates the specified aircraft (user editable properties only)",
        "description": "sushi.at, 17/09/2021.",
        "operationId": "UpdateAircraft",
        "requestBody": {
          "description": "The update aircraft.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAircraft"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAircraft"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAircraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType": {
      "post": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Adds a new aircraft type.",
        "description": "sushi.at, 02/06/2021.",
        "operationId": "AddAircraftType",
        "parameters": [
          {
            "name": "upgradeForType",
            "in": "query",
            "description": "The ID of the aircraft type this one is an update for (auto adjusts next version and variants).",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new aircraft type to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Gets all enabled and current aircraft types.",
        "description": "sushi.at, 02/06/2021.",
        "operationId": "GetAircraftTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Updates an existing aircraft type.",
        "description": "sushi.at, 11/06/2021.",
        "operationId": "UpdateAircraftType",
        "requestBody": {
          "description": "The aircraft type to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/{typeID}": {
      "delete": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Deletes the specified aircraft type.",
        "description": "sushi.at, 11/06/2021.",
        "operationId": "DeleteAircraftType",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/disable/{typeID}": {
      "put": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Disables the specified aircraft type.",
        "description": "sushi.at, 09/06/2021.",
        "operationId": "DisableAircraftType",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/disableDetailedChecks/{typeID}": {
      "put": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Disables the specified aircraft type's detailed checks (only to be used on patch days until a new aircraft type version can be created!).",
        "description": "sushi.at, 09/06/2021.",
        "operationId": "DisableAircraftTypeDetailedChecks",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/enable/{typeID}": {
      "put": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Enables the specified aircraft type.",
        "description": "sushi.at, 09/06/2021.",
        "operationId": "EnableAircraftType",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/enableDetailedChecks/{typeID}": {
      "put": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Enables the specified aircraft type's detailed checks (only to be used on patch days until a new aircraft type version can be created!).",
        "description": "sushi.at, 09/06/2021.",
        "operationId": "EnableAircraftTypeDetailedChecks",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/manufacturers": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Get the list aircraft manufacturers.",
        "description": "sushi.at, 20/02/2022.",
        "operationId": "GetAircraftManufacturers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftManufacturerIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftManufacturerIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftManufacturerIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/image/{typeID}": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Get image for the specified aircraft type.",
        "description": "sushi.at, 19/02/2022.",
        "operationId": "GetAircraftTypeImage",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ByteArrayApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Update the image of the specified aircraft type.",
        "description": "sushi.at, 19/02/2022.",
        "operationId": "UpdateAircraftTypeImage",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the aircraft type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "fileUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/upgrades": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Get available aircraft upgrades.",
        "description": "sushi.at, 29/11/2021.",
        "operationId": "GetAircraftTypeUpgrades",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeUpgradeIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeUpgradeIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeUpgradeIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/all": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Gets all aircraft types (including disabled and previous versions).",
        "description": "sushi.at, 02/06/2021.",
        "operationId": "GetAllAircraftTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/simulator/{simulator}": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Gets all aircraft types for the specified simulator (including disabled and previous).\r\nversions).",
        "description": "sushi.at, 29/11/2021.",
        "operationId": "GetSimulatorAircraftTypes",
        "parameters": [
          {
            "name": "simulator",
            "in": "path",
            "description": "The simulator. 0 = MSFS, 1 = XPlane11",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Simulator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/variants/{typeID}": {
      "get": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Gets the variants of this type (can be called with base or one of the variant sub-types)",
        "description": "sushi.at, 23/11/2021.",
        "operationId": "GetVariantsOfType",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "Identifier for the type.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftTypeIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/AircraftType/upgrade": {
      "post": {
        "tags": [
          "AircraftType"
        ],
        "summary": "Performs the specified aircraft type upgrade.",
        "description": "sushi.at, 29/11/2021.",
        "operationId": "UpgradeAircraftType",
        "requestBody": {
          "description": "The upgrade to perform (from/to type).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftTypeUpgrade"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftTypeUpgrade"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftTypeUpgrade"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airline": {
      "get": {
        "tags": [
          "Airline"
        ],
        "summary": "Get user airline.",
        "description": "sushi.at, 01/11/2021.",
        "operationId": "GetAirline",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserAirlineApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAirlineApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAirlineApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airline/permissions": {
      "get": {
        "tags": [
          "Airline"
        ],
        "summary": "Gets the airline permissions for the current user.",
        "description": "sushi.at, 26/10/2021.",
        "operationId": "GetAirlinePermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirlinePermissionListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlinePermissionListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlinePermissionListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airline/permissions/all": {
      "get": {
        "tags": [
          "Airline"
        ],
        "summary": "Gets all airline permissions (for all members, requires ChangePermission)",
        "description": "sushi.at, 26/10/2021.",
        "operationId": "GetAllAirlinePermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirlineMemberAirlinePermissionHashSetDictionaryApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlineMemberAirlinePermissionHashSetDictionaryApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirlineMemberAirlinePermissionHashSetDictionaryApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport/clientPackage": {
      "post": {
        "tags": [
          "Airport"
        ],
        "summary": "Creates a new airport client package.",
        "description": "sushi.at, 21/09/2021.",
        "operationId": "CreateAirportClientPackage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Gets the latest airport client package.",
        "description": "sushi.at, 21/09/2021.",
        "operationId": "GetAirportClientPackage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirportClientPackageApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportClientPackageApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportClientPackageApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport/{icao}": {
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Gets one specific airport.",
        "description": "sushi.at, 03/05/2021.",
        "operationId": "GetAirport",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The ICAO identifier of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirportApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport/clientPackageHash": {
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Gets the latest airport client package hash.",
        "description": "sushi.at, 21/09/2021.",
        "operationId": "GetAirportClientPackageHash",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport": {
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Gets all available airports (ICAO code only).",
        "description": "sushi.at, 02/05/2021.",
        "operationId": "GetAirports",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport/{status}/{maxResults}": {
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Gets airports with the specified population status up to the specified max result count.",
        "description": "sushi.at, 05/07/2021.",
        "operationId": "GetAirportsWithPopulationStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status. 0 = NeedsHandling, 1 = Queued, 2 = Finished, 3 = Failed",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProcessingStatus"
            }
          },
          {
            "name": "maxResults",
            "in": "path",
            "description": "(Optional) The maximum results (default 50).",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Airport/search/{searchString}": {
      "get": {
        "tags": [
          "Airport"
        ],
        "summary": "Searches for airports using ICAO, name or city and return the first 50 results.",
        "description": "sushi.at, 21/09/2021.",
        "operationId": "SearchAirport",
        "parameters": [
          {
            "name": "searchString",
            "in": "path",
            "description": "The search string.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirportIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/tokens": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get the current OpenSky tokens.",
        "description": "sushi.at, 12/07/2021.",
        "operationId": "GetTokens",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/changePassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change OpenSky user password.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The change password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/forgotPassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password request from OpenSky user.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The forgot password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/applicationToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get a new application API access token.",
        "description": "sushi.at, 01/06/2021.",
        "requestBody": {
          "description": "The application token model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/userRoles": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Gets the roles of the current OpenSky user.",
        "description": "sushi.at, 04/06/2021.",
        "operationId": "GetUserRoles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to OpenSky API.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The login model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/refreshToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh OpenSky API JWT token using a single-use refresh token.",
        "description": "sushi.at, 30/05/2021.",
        "requestBody": {
          "description": "The refresh token request model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new OpenSky user.",
        "description": "sushi.at, 06/05/2021.",
        "requestBody": {
          "description": "The register user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/resendValidationEmail": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Re-send the email validation.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The resend validation email model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendValidationEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendValidationEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendValidationEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/resetPassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset OpenSky user password.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The reset password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/revokeAllTokens": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke all OpenSky refresh tokens.",
        "description": "sushi.at, 31/05/2021.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/revokeToken": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke specified OpenSky refresh token.",
        "description": "sushi.at, 31/05/2021.",
        "requestBody": {
          "description": "The revoke token model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/revokeTokenByName": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke specified OpenSky refresh token using name and expiry.",
        "description": "sushi.at, 12/07/2021.",
        "requestBody": {
          "description": "The revoke token by name model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenByName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenByName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenByName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/validateEmail": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate email address of previously registered OpenSky user.",
        "description": "sushi.at, 08/05/2021.",
        "requestBody": {
          "description": "The validate email model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/DataImport": {
      "get": {
        "tags": [
          "DataImport"
        ],
        "summary": "Get data imports.",
        "description": "sushi.at, 02/07/2021.",
        "operationId": "GetDataImports",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/DataImport/status/{importID}": {
      "get": {
        "tags": [
          "DataImport"
        ],
        "summary": "Get data import status.",
        "description": "sushi.at, 12/05/2021.",
        "operationId": "GetImportStatus",
        "parameters": [
          {
            "name": "importID",
            "in": "path",
            "description": "Identifier for the import.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportStatusApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportStatusApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataImportStatusApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/DataImport/littleNavmapMSFS": {
      "post": {
        "tags": [
          "DataImport"
        ],
        "summary": "Post LittleNavmap MSFS sqlite database for import.",
        "description": "sushi.at, 04/05/2021.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "fileUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/DataImport/littleNavmapXP11": {
      "post": {
        "tags": [
          "DataImport"
        ],
        "summary": "Post LittleNavmap XPlane11 sqlite database for import.",
        "description": "sushi.at, 04/05/2021.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUpload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "fileUpload": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidNullableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bobsYourUncle": {
      "post": {
        "tags": [
          "Financial"
        ],
        "summary": "Free money :)",
        "description": "sushi.at, 25/01/2022.",
        "operationId": "BobsYourUncle",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/balances": {
      "get": {
        "tags": [
          "Financial"
        ],
        "summary": "Get the current account balances.",
        "description": "sushi.at, 25/01/2022.",
        "operationId": "GetAccountBalances",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBalancesApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBalancesApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBalancesApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overview": {
      "get": {
        "tags": [
          "Financial"
        ],
        "summary": "Get financial overview (with transactions of the last 30 days)",
        "description": "sushi.at, 24/01/2022.",
        "operationId": "GetFinancialOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/abort/{flightID}": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Abort flight, return to planning stage (with potential penalties depending on flight phase\r\nand location)",
        "description": "sushi.at, 13/11/2021.",
        "operationId": "AbortFlight",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight (plan).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/complete": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Upload final save and complete flight.",
        "description": "sushi.at, 14/11/2021.",
        "operationId": "CompleteFlight",
        "requestBody": {
          "description": "The final report.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinalReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/flightPlan/{flightID}": {
      "delete": {
        "tags": [
          "Flight"
        ],
        "summary": "Delete the specified flight plan.",
        "description": "sushi.at, 03/10/2021.",
        "operationId": "DeleteFlightPlan",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight (plan).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/autoSave/{flightID}": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Download flight auto-save.",
        "description": "sushi.at, 14/11/2021.",
        "operationId": "DownloadFlightAutoSave",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight (plan).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Upload auto-save flight log for the specified flight.",
        "description": "sushi.at, 13/11/2021.",
        "operationId": "UploadFlightAutoSave",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The auto-save (base64 encoded).",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Get currently active flight for tracking.",
        "description": "sushi.at, 11/11/2021.",
        "operationId": "GetFlight",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlightApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/flightLogDetails/{flightID}": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Gets the flight log details (final log xml file and ofp)",
        "description": "sushi.at, 17/11/2021.",
        "operationId": "GetFlightLogDetails",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogDetailsApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogDetailsApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogDetailsApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/flightPlans": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Get flight plans.",
        "description": "sushi.at, 03/10/2021.",
        "operationId": "GetFlightPlans",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlightPlanIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightPlanIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightPlanIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/myFlightLogs": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Get flight logs (completed flights)",
        "description": "sushi.at, 15/11/2021.",
        "operationId": "GetMyFlightLogs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightLogIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/myFlights": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Get \"my\" active flights (up to one currently flying and possibly multiple paused).",
        "description": "sushi.at, 10/11/2021.",
        "operationId": "GetMyFlights",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FlightIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/worldMap": {
      "get": {
        "tags": [
          "Flight"
        ],
        "summary": "Get flights for the world map.",
        "description": "sushi.at, 18/11/2021.",
        "operationId": "GetWorldMapFlights",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorldMapFlightIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldMapFlightIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldMapFlightIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/pause/{flightID}": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Pause the flight with the specified ID, does not save position or save file - upload these\r\nbefore calling pause if they should be preserved.",
        "description": "sushi.at, 13/11/2021.",
        "operationId": "PauseFlight",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/posReport": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Flight position report.",
        "description": "sushi.at, 13/11/2021.",
        "operationId": "PositionReport",
        "requestBody": {
          "description": "The position report.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/resume/{flightID}": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Resume the flight with the specified ID, only works if there is no other active flight.",
        "description": "sushi.at, 13/11/2021.",
        "operationId": "ResumeFlight",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/flightPlan": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Save a new or existing flight plan.",
        "description": "sushi.at, 03/10/2021.",
        "operationId": "SaveFlightPlan",
        "requestBody": {
          "description": "The flight plan.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightPlan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlightPlan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/lastMinuteFuel/{flightID}/{gallons}": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Purchase last minute fuel before departure at increased prices.",
        "description": "sushi.at, 28/11/2023.",
        "operationId": "PurchaseLastMinuteFuel",
        "parameters": [
          {
            "name": "flightID",
            "in": "path",
            "description": "Identifier for the flight.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "gallons",
            "in": "path",
            "description": "The gallons to purchase.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DoubleApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoubleApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoubleApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Flight/start": {
      "post": {
        "tags": [
          "Flight"
        ],
        "summary": "Start flight.",
        "description": "sushi.at, 10/11/2021.",
        "operationId": "StartFlight",
        "requestBody": {
          "description": "The start flight model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartFlight"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartFlight"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartFlight"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StartFlightStatusApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartFlightStatusApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartFlightStatusApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/abort/{jobID}": {
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Aborts the specified job.",
        "description": "sushi.at, 18/12/2021.",
        "operationId": "AbortJob",
        "parameters": [
          {
            "name": "jobID",
            "in": "path",
            "description": "Identifier for the job.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/accept/{jobID}/{forAirline}": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Accept the specified job.",
        "description": "sushi.at, 18/12/2021.",
        "operationId": "AcceptJob",
        "parameters": [
          {
            "name": "jobID",
            "in": "path",
            "description": "Identifier for the job.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "forAirline",
            "in": "path",
            "description": "True to accept the job for the airline, false for private job.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/atAirportForSim/{icao}/{direction}/{simulator}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets the available jobs at the specified airport and simulator.",
        "description": "sushi.at, 10/12/2021.",
        "operationId": "GetJobsAtAirportForSimulator",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The ICAO code of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the jobs to return. 0 = From, 1 = To, 2 = RoundTrip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobDirection"
            }
          },
          {
            "name": "simulator",
            "in": "path",
            "description": "The simulator (or NULL for all simulators). 0 = MSFS, 1 = XPlane11",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Simulator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/atAirport/{icao}/{direction}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets the available jobs at the specified airport.",
        "description": "sushi.at, 10/12/2021.",
        "operationId": "GetJobsAtAirport",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The ICAO code of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the jobs to return. 0 = From, 1 = To, 2 = RoundTrip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/atAirportForCategoryAndSim/{icao}/{direction}/{category}/{simulator}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets the available jobs at the specified airport for the specified aircraft type category and simulator.",
        "description": "sushi.at, 10/12/2021.",
        "operationId": "GetJobsAtAirportForCategoryAndSimulator",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The ICAO code of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the jobs to return. 0 = From, 1 = To, 2 = RoundTrip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobDirection"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "The aircraft type category to return jobs for (recommended category). 0 = SEP, 1 = MEP, 2 = SET, 3 = MET, 4 = JET, 5 = REG, 6 = NBA, 7 = WBA, 8 = HEL",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AircraftTypeCategory"
            }
          },
          {
            "name": "simulator",
            "in": "path",
            "description": "The simulator (or NULL for all simulators). 0 = MSFS, 1 = XPlane11",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Simulator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/atAirportForCategory/{icao}/{direction}/{category}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets the available jobs at the specified airport for the specified aircraft type category.",
        "description": "sushi.at, 10/12/2021.",
        "operationId": "GetJobsAtAirportForCategory",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The ICAO code of the airport.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the jobs to return. 0 = From, 1 = To, 2 = RoundTrip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobDirection"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "The aircraft type category to return jobs for (recommended category). 0 = SEP, 1 = MEP, 2 = SET, 3 = MET, 4 = JET, 5 = REG, 6 = NBA, 7 = WBA, 8 = HEL",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AircraftTypeCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/myJobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get \"my\" jobs, both personal and airline (active only)",
        "description": "sushi.at, 18/12/2021.",
        "operationId": "GetMyJobs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Job/plannablePayloads": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get plannable payloads plus basic information about flights they are already planned for.",
        "description": "sushi.at, 19/12/2021.",
        "operationId": "GetPlannablePayloads",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlannablePayloadIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannablePayloadIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannablePayloadIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/WorldStatistics": {
      "get": {
        "tags": [
          "WorldStatistics"
        ],
        "summary": "Get world statistics overview.",
        "description": "sushi.at, 02/07/2021.",
        "operationId": "GetWorldStatisticsOverview",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorldStatisticsOverviewApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldStatisticsOverviewApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldStatisticsOverviewApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/WorldStatistics/populateAircraft/{icao}": {
      "post": {
        "tags": [
          "WorldStatistics"
        ],
        "summary": "Manually request to populate an airport and return info text results.",
        "description": "sushi.at, 05/07/2021.",
        "operationId": "PopulateAirportWithAircraft",
        "parameters": [
          {
            "name": "icao",
            "in": "path",
            "description": "The icao of the airport to populate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountBalances": {
        "type": "object",
        "properties": {
          "accountBalance": {
            "type": "integer",
            "description": "Gets or sets the account balance (of the user).",
            "format": "int64"
          },
          "airlineAccountBalance": {
            "type": "integer",
            "description": "Gets or sets the airline account balance (if user has the permission).",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Account balances model."
      },
      "AccountBalancesApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountBalances"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AccountOverview": {
        "type": "object",
        "properties": {
          "airlineName": {
            "type": "string",
            "description": "Gets or sets the name of the airline (if the user is a member of one).",
            "nullable": true
          },
          "joined": {
            "type": "string",
            "description": "Gets or sets the Date/Time of when the user joined.",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the account name.",
            "nullable": true
          },
          "profileImage": {
            "type": "string",
            "description": "Gets or sets the profile image.",
            "format": "byte",
            "nullable": true
          },
          "tokenRenewalCountryVerification": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the token renewal country verification is enabled."
          }
        },
        "additionalProperties": false,
        "description": "Account overview model."
      },
      "AccountOverviewApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountOverview"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "Aircraft": {
        "required": [
          "airportICAO",
          "registry",
          "typeID"
        ],
        "type": "object",
        "properties": {
          "airframeHours": {
            "type": "number",
            "description": "Gets or sets the airframe hours.",
            "format": "double"
          },
          "airlineOwnerID": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the airline owner (NULL if no airline owner).",
            "nullable": true
          },
          "airportICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airport ICAO the plane is located at, note this is the departure airport if\r\nthe aircraft currently is flying."
          },
          "canStartFlight": {
            "type": "boolean",
            "description": "Can the aircraft currently start a new flight?",
            "readOnly": true
          },
          "engine1Hours": {
            "type": "number",
            "description": "Gets or sets the engine 1 hours.",
            "format": "double"
          },
          "engine2Hours": {
            "type": "number",
            "description": "Gets or sets the engine 2 hours.",
            "format": "double"
          },
          "engine3Hours": {
            "type": "number",
            "description": "Gets or sets the engine 3 hours.",
            "format": "double"
          },
          "engine4Hours": {
            "type": "number",
            "description": "Gets or sets the engine 4 hours.",
            "format": "double"
          },
          "fuel": {
            "type": "number",
            "description": "Gets or sets the current fuel in gallons.",
            "format": "double"
          },
          "fuellingUntil": {
            "type": "string",
            "description": "Gets or sets the Date/Time until the aircraft is fuelling.",
            "format": "date-time",
            "nullable": true
          },
          "heading": {
            "type": "number",
            "description": "Gets the current heading of the aircraft, or 0 if not available.",
            "format": "double",
            "readOnly": true
          },
          "latitude": {
            "type": "number",
            "description": "Gets the latitude.",
            "format": "double",
            "readOnly": true
          },
          "lifeTimeExpense": {
            "type": "integer",
            "description": "Gets or sets the life time expense (for the current owner only).",
            "format": "int64"
          },
          "lifeTimeIncome": {
            "type": "integer",
            "description": "Gets or sets the life time income (for the current owner only).",
            "format": "int64"
          },
          "loadingUntil": {
            "type": "string",
            "description": "Gets or sets the Date/Time until the aircraft is loading payload (cargo or pax).",
            "format": "date-time",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "Gets the longitude.",
            "format": "double",
            "readOnly": true
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the user-chosen name of the aircraft.",
            "nullable": true
          },
          "ownerID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the user that owns this aircraft (NULL if no user owner).",
            "nullable": true
          },
          "ownerName": {
            "type": "string",
            "description": "Gets the owner name.",
            "nullable": true,
            "readOnly": true
          },
          "payloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payload"
            },
            "description": "Gets or sets the payloads currently loaded onto this aircraft.",
            "nullable": true
          },
          "purchasePrice": {
            "type": "integer",
            "description": "Gets or sets the purchase price for the aircraft. Null if not available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "registry": {
            "maxLength": 12,
            "minLength": 7,
            "type": "string",
            "description": "Gets or sets the aircraft registration."
          },
          "rentPrice": {
            "type": "integer",
            "description": "Gets or sets the rent price per flight hour for the aircraft. Null if not available for rent.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets the current status of the aircraft.",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/AircraftType"
          },
          "typeID": {
            "type": "string",
            "description": "Gets or sets the identifier of the aircraft type.",
            "format": "uuid"
          },
          "warpingUntil": {
            "type": "string",
            "description": "Gets or sets the Date/Time until the aircraft is warping.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Aircraft model."
      },
      "AircraftApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Aircraft"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AircraftIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aircraft"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AircraftManufacturer": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Short identifier string for the manufacturer."
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Full name of manufacturer."
          }
        },
        "additionalProperties": false,
        "description": "Aircraft manufacturer model."
      },
      "AircraftManufacturerDeliveryLocation": {
        "required": [
          "aircraftTypeID",
          "airportICAO",
          "manufacturerID"
        ],
        "type": "object",
        "properties": {
          "aircraftTypeID": {
            "type": "string",
            "description": "Gets or sets the identifier of the aircraft type.",
            "format": "uuid"
          },
          "airportICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airport icao."
          },
          "airportName": {
            "type": "string",
            "description": "Gets the name of the airport.",
            "nullable": true,
            "readOnly": true
          },
          "manufacturerID": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the identifier of the manufacturer."
          }
        },
        "additionalProperties": false,
        "description": "Aircraft manufacturer delivery location model."
      },
      "AircraftManufacturerIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftManufacturer"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AircraftSearchAroundAirport": {
        "type": "object",
        "properties": {
          "airportICAO": {
            "type": "string",
            "description": "Gets or sets the airport icao.",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/AircraftTypeCategory"
          },
          "filterByCategory": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to filter by category (nullable enum for Category was ignored)."
          },
          "manufacturer": {
            "type": "string",
            "description": "Gets or sets the manufacturer.",
            "nullable": true
          },
          "maxResults": {
            "type": "integer",
            "description": "Gets or sets the maximum results.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the type name.",
            "nullable": true
          },
          "onlyVanilla": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to only include vanilla aircraft in the search results."
          },
          "radius": {
            "type": "integer",
            "description": "Gets or sets the radius in nautical miles.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Aircraft search around airport model."
      },
      "AircraftSearchInCountry": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/AircraftTypeCategory"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "filterByCategory": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to filter by category (nullable enum for Category was ignored)."
          },
          "manufacturer": {
            "type": "string",
            "description": "Gets or sets the manufacturer.",
            "nullable": true
          },
          "maxResults": {
            "type": "integer",
            "description": "Gets or sets the maximum results.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the type name.",
            "nullable": true
          },
          "onlyVanilla": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to only include vanilla aircraft in the search results."
          }
        },
        "additionalProperties": false,
        "description": "Aircraft search in country model."
      },
      "AircraftType": {
        "required": [
          "atcModel",
          "atcType",
          "category",
          "engineType",
          "name",
          "simulator",
          "uploaderID"
        ],
        "type": "object",
        "properties": {
          "atcModel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the ATCModel property in the sim."
          },
          "atcType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the ATCType property in the sim."
          },
          "category": {
            "$ref": "#/components/schemas/AircraftTypeCategory"
          },
          "comments": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the comments (moderation status, retired, needs fixing, etc.).",
            "nullable": true
          },
          "customAgentModule": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the custom agent module name, default is NULL for none.",
            "nullable": true
          },
          "deliveryLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftManufacturerDeliveryLocation"
            },
            "description": "Gets or sets the delivery locations.",
            "nullable": true
          },
          "detailedChecksDisabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the detailed checks are TEMPORARILY disabled - only\r\nuse this on patch days until a new version of the plane can be added."
          },
          "emptyWeight": {
            "type": "number",
            "description": "Gets or sets the empty weight in pounds.",
            "format": "double"
          },
          "enabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft type is enabled."
          },
          "engineCount": {
            "type": "integer",
            "description": "Gets or sets the number of engines.",
            "format": "int32"
          },
          "engineModel": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the engine model.",
            "nullable": true
          },
          "engineType": {
            "$ref": "#/components/schemas/EngineType"
          },
          "flapsAvailable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft has flaps."
          },
          "fuelTotalCapacity": {
            "type": "number",
            "description": "Gets or sets the fuel total capacity in gallons.",
            "format": "double"
          },
          "fuelType": {
            "$ref": "#/components/schemas/FuelType"
          },
          "fuelWeightPerGallon": {
            "type": "number",
            "description": "Gets or sets the fuel weight per gallon (default values are 6 lbs/gallon avgas and 6.66 lbs/gallon jetfuel).",
            "format": "double"
          },
          "hasAircraftImage": {
            "type": "boolean",
            "description": "Gets a value indicating whether this aircraft type has an image uploaded.",
            "readOnly": true
          },
          "hasVariants": {
            "type": "boolean",
            "description": "Gets a value indicating whether this aircraft type has variants.",
            "readOnly": true
          },
          "icaoTypeDesignator": {
            "maxLength": 4,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the ICAO type designator.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "uuid"
          },
          "includeInWorldPopulation": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft type should be included in the world\r\npopulation, or only when a player buys one (use for popular mods only!)."
          },
          "isGearRetractable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft has retractable landing gear."
          },
          "isHistoric": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft is historic (can't be purchased new)."
          },
          "isVanilla": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft is available in the vanilla sim or is\r\ncoming from a mod."
          },
          "isVariantOf": {
            "type": "string",
            "description": "Gets or sets the ID of the aircraft that this one is a variant of.",
            "format": "uuid",
            "nullable": true
          },
          "lastEditedByID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the last edited by user.",
            "nullable": true
          },
          "lastEditedByName": {
            "type": "string",
            "description": "Gets the name of the last edited by user.",
            "nullable": true,
            "readOnly": true
          },
          "manufacturer": {
            "$ref": "#/components/schemas/AircraftManufacturer"
          },
          "manufacturerID": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the identifier of the manufacturer.",
            "nullable": true
          },
          "maxGrossWeight": {
            "type": "number",
            "description": "Gets or sets the maximum gross weight in pounds.",
            "format": "double"
          },
          "maxPayloadDeltaAllowed": {
            "type": "integer",
            "description": "Gets or sets the maximum payload delta allowed during a flight (to compensate for consumables\r\nlike de-icing fluid).",
            "format": "int32"
          },
          "maxPrice": {
            "type": "integer",
            "description": "Gets or sets the maximum selling price.",
            "format": "int32"
          },
          "minimumRunwayLength": {
            "type": "integer",
            "description": "Minimum runway length in feet.",
            "format": "int32"
          },
          "minPrice": {
            "type": "integer",
            "description": "Gets or sets the minimum selling price.",
            "format": "int32"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name of the aircraft."
          },
          "needsCoPilot": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the aircraft needs a co-pilot."
          },
          "needsFlightEngineer": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the aircraft needs a flight engineer."
          },
          "nextVersion": {
            "type": "string",
            "description": "Gets or sets the next version of this aircraft type - to migrate existing aircraft to this\r\nnew type.",
            "format": "uuid",
            "nullable": true
          },
          "overrideFuelType": {
            "$ref": "#/components/schemas/FuelType"
          },
          "requiresManualFuelling": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the aircraft type requires manual fuelling."
          },
          "requiresManualLoading": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the aircraft type requires manual loading."
          },
          "simulator": {
            "$ref": "#/components/schemas/Simulator"
          },
          "uploaderID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the uploader user."
          },
          "uploaderName": {
            "type": "string",
            "description": "Gets the name of the uploader.",
            "nullable": true,
            "readOnly": true
          },
          "usesStrobeForBeacon": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this aircraft uses the strobe light instead of the\r\nbeacon - most likely because it doesn't have a beacon."
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftType"
            },
            "description": "Gets or sets the variants of this aircraft.",
            "nullable": true
          },
          "versionNumber": {
            "type": "integer",
            "description": "Gets or sets the version number of this type.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Aircraft type model."
      },
      "AircraftTypeCategory": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "Values that represent aircraft type categories. 0 = SEP, 1 = MEP, 2 = SET, 3 = MET, 4 = JET, 5 = REG, 6 = NBA, 7 = WBA, 8 = HEL",
        "format": "int32",
        "x-enumNames": [
          "SEP",
          "MEP",
          "SET",
          "MET",
          "JET",
          "REG",
          "NBA",
          "WBA",
          "HEL"
        ],
        "x-enum-varnames": [
          "SEP",
          "MEP",
          "SET",
          "MET",
          "JET",
          "REG",
          "NBA",
          "WBA",
          "HEL"
        ]
      },
      "AircraftTypeIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftType"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AircraftTypeUpgrade": {
        "type": "object",
        "properties": {
          "aircraftCount": {
            "type": "integer",
            "description": "Gets or sets the number of aircraft affected by this upgrade.",
            "format": "int32"
          },
          "from": {
            "$ref": "#/components/schemas/AircraftType"
          },
          "to": {
            "$ref": "#/components/schemas/AircraftType"
          }
        },
        "additionalProperties": false,
        "description": "Aircraft type upgrade model."
      },
      "AircraftTypeUpgradeIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftTypeUpgrade"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AirlineMemberAirlinePermissionHashSetDictionaryApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AirlinePermission"
              },
              "nullable": true
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AirlinePermission": {
        "enum": [
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          20,
          21,
          22,
          23,
          24,
          25,
          30,
          31,
          32,
          33,
          40,
          41,
          42,
          43,
          50,
          90,
          91,
          92
        ],
        "type": "integer",
        "description": "Airline roles. 10 = BuyAircraft, 11 = SellAircraft, 12 = RentAircraft, 13 = RentOutAircraft, 14 = AssignAircraft, 15 = RenameAircraft, 16 = ReRegisterAircraft, 20 = BuyFBO, 21 = SellFBO, 22 = RentFBO, 23 = RentOutFBO, 24 = RenameFBO, 25 = OrderFuel, 30 = AcceptJobs, 31 = Dispatch, 32 = OutsourceJobs, 33 = AbortJobs, 40 = ModifyAircraft, 41 = MaintainAircraft, 42 = ReplaceAircraftParts, 43 = PerformGroundOperations, 50 = FinancialRecords, 90 = ChangePermissions, 91 = BoardMember, 92 = AllPermissions",
        "format": "int32",
        "x-enumNames": [
          "BuyAircraft",
          "SellAircraft",
          "RentAircraft",
          "RentOutAircraft",
          "AssignAircraft",
          "RenameAircraft",
          "ReRegisterAircraft",
          "BuyFBO",
          "SellFBO",
          "RentFBO",
          "RentOutFBO",
          "RenameFBO",
          "OrderFuel",
          "AcceptJobs",
          "Dispatch",
          "OutsourceJobs",
          "AbortJobs",
          "ModifyAircraft",
          "MaintainAircraft",
          "ReplaceAircraftParts",
          "PerformGroundOperations",
          "FinancialRecords",
          "ChangePermissions",
          "BoardMember",
          "AllPermissions"
        ],
        "x-enum-varnames": [
          "BuyAircraft",
          "SellAircraft",
          "RentAircraft",
          "RentOutAircraft",
          "AssignAircraft",
          "RenameAircraft",
          "ReRegisterAircraft",
          "BuyFBO",
          "SellFBO",
          "RentFBO",
          "RentOutFBO",
          "RenameFBO",
          "OrderFuel",
          "AcceptJobs",
          "Dispatch",
          "OutsourceJobs",
          "AbortJobs",
          "ModifyAircraft",
          "MaintainAircraft",
          "ReplaceAircraftParts",
          "PerformGroundOperations",
          "FinancialRecords",
          "ChangePermissions",
          "BoardMember",
          "AllPermissions"
        ]
      },
      "AirlinePermissionListApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirlinePermission"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "Airport": {
        "required": [
          "icao",
          "longestRunwaySurface",
          "name"
        ],
        "type": "object",
        "properties": {
          "altitude": {
            "type": "integer",
            "description": "Gets or sets the altitude of the airport in feet.",
            "format": "int32"
          },
          "approaches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approach"
            },
            "description": "Gets the approaches.",
            "nullable": true
          },
          "atisFrequency": {
            "type": "integer",
            "description": "Gets or sets the ATIS frequency (if available).",
            "format": "int32",
            "nullable": true
          },
          "avGasPrice": {
            "type": "number",
            "description": "Gets or sets the AV gas price in SkyBucks/Gallon.",
            "format": "float"
          },
          "city": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the city.",
            "nullable": true
          },
          "gaRamps": {
            "type": "integer",
            "description": "Gets or sets the number of GA ramps.",
            "format": "int32"
          },
          "gates": {
            "type": "integer",
            "description": "Gets or sets the number of gates.",
            "format": "int32"
          },
          "hasAvGas": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport has AV gas for refueling."
          },
          "hasBeenPopulatedMSFS": {
            "$ref": "#/components/schemas/ProcessingStatus"
          },
          "hasBeenPopulatedXP11": {
            "$ref": "#/components/schemas/ProcessingStatus"
          },
          "hasJetFuel": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport has jet fuel for refueling."
          },
          "icao": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the ICAO identifier of the airport."
          },
          "isClosed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport is closed."
          },
          "isMilitary": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport is a military one."
          },
          "jetFuelPrice": {
            "type": "number",
            "description": "Gets or sets the jet fuel price in SkyBucks/Gallon.",
            "format": "float"
          },
          "latitude": {
            "type": "number",
            "description": "Gets or sets the latitude of the airport.",
            "format": "double"
          },
          "longestRunwayLength": {
            "type": "integer",
            "description": "Gets or sets the length of the longest runway in feet.",
            "format": "int32"
          },
          "longestRunwaySurface": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the surface type of the longest runway (can be \"UNKNOWN\" in a few cases)."
          },
          "longitude": {
            "type": "number",
            "description": "Gets or sets the longitude of the airport.",
            "format": "double"
          },
          "msfs": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport is available in MSFS 2020."
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name."
          },
          "previousSize": {
            "type": "integer",
            "description": "Gets or sets the previous size of the airport (if available, used to detect size changes and\r\ntrigger other services like the aircraft world populator).",
            "format": "int32",
            "nullable": true
          },
          "runwayCount": {
            "type": "integer",
            "description": "Gets or sets the number of runways.",
            "format": "int32"
          },
          "runways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Runway"
            },
            "description": "Gets or sets the runways.",
            "nullable": true
          },
          "s2Cell3": {
            "type": "string",
            "description": "S2 geometry cell ID for level 3.",
            "format": "int64"
          },
          "s2Cell4": {
            "type": "string",
            "description": "S2 geometry cell ID for level 4.",
            "format": "int64"
          },
          "s2Cell5": {
            "type": "string",
            "description": "S2 geometry cell ID for level 5.",
            "format": "int64"
          },
          "s2Cell6": {
            "type": "string",
            "description": "S2 geometry cell ID for level 6.",
            "format": "int64"
          },
          "s2Cell7": {
            "type": "string",
            "description": "S2 geometry cell ID for level 7.",
            "format": "int64"
          },
          "s2Cell8": {
            "type": "string",
            "description": "S2 geometry cell ID for level 8.",
            "format": "int64"
          },
          "s2Cell9": {
            "type": "string",
            "description": "S2 geometry cell ID for level 9.",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "description": "Gets or sets the size of the airport (from -1 to 6, NULL means size isn't calculated yet).",
            "format": "int32",
            "nullable": true
          },
          "supportsSuper": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport supports super-heavy aircraft like the Airbus A380."
          },
          "towerFrequency": {
            "type": "integer",
            "description": "Gets or sets the tower frequency (if available).",
            "format": "int32",
            "nullable": true
          },
          "unicomFrequency": {
            "type": "integer",
            "description": "Gets or sets the unicom frequency (if available).",
            "format": "int32",
            "nullable": true
          },
          "xP11": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the airport is available in XPlane 11."
          }
        },
        "additionalProperties": false,
        "description": "Airport model."
      },
      "AirportApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Airport"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AirportClientPackage": {
        "required": [
          "creationTime",
          "package",
          "packageHash"
        ],
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "description": "Gets or sets the creation time of the package.",
            "format": "date-time"
          },
          "package": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the package contents (g-zipped, base64 encoded)."
          },
          "packageHash": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the package hash (SHA-256, base64 encoded)"
          }
        },
        "additionalProperties": false,
        "description": "Airport client package model."
      },
      "AirportClientPackageApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AirportClientPackage"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "AirportIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Airport"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "ApplicationToken": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the name of the application."
          }
        },
        "additionalProperties": false,
        "description": "Application token model."
      },
      "Approach": {
        "required": [
          "airportICAO",
          "type"
        ],
        "type": "object",
        "properties": {
          "airportICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airport ICAO."
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the approach ID.",
            "format": "int32"
          },
          "runwayName": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name of the runway (can be NULL if approach doesn't specify a runway).",
            "nullable": true
          },
          "suffix": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the approach type suffix (Y, Z, etc.).",
            "nullable": true
          },
          "type": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the approach type (ILS, RNAV, etc.)."
          }
        },
        "additionalProperties": false,
        "description": "Approach model."
      },
      "ByteArrayApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Gets or sets the embedded data of type T.",
            "format": "byte",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "ChangePassword": {
        "required": [
          "newPassword",
          "password"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password."
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password."
          },
          "resetTokens": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to reset all OpenSky api tokens."
          }
        },
        "additionalProperties": false,
        "description": "Change password model."
      },
      "Country": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189,
          190,
          191,
          192,
          193,
          194,
          195,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          214,
          215,
          216,
          217,
          218,
          219,
          220,
          221,
          222,
          223,
          224,
          225,
          226,
          227,
          228,
          229,
          230,
          231,
          232,
          233,
          234,
          235,
          236,
          237,
          238,
          239,
          240,
          241,
          242,
          243,
          244,
          245,
          246,
          247,
          248,
          249,
          250
        ],
        "type": "integer",
        "description": "Enum of two letter country codes according to ISO-3166. 1 = AF, 2 = AX, 3 = AL, 4 = DZ, 5 = AS, 6 = AD, 7 = AO, 8 = AI, 9 = AQ, 10 = AG, 11 = AR, 12 = AM, 13 = AW, 14 = AU, 15 = AT, 16 = AZ, 17 = BS, 18 = BH, 19 = BD, 20 = BB, 21 = BY, 22 = BE, 23 = BZ, 24 = BJ, 25 = BM, 26 = BT, 27 = BO, 28 = BQ, 29 = BA, 30 = BW, 31 = BV, 32 = BR, 33 = IO, 34 = BN, 35 = BG, 36 = BF, 37 = BI, 38 = CV, 39 = KH, 40 = CM, 41 = CA, 42 = KY, 43 = CF, 44 = TD, 45 = CL, 46 = CN, 47 = CX, 48 = CC, 49 = CO, 50 = KM, 51 = CG, 52 = CD, 53 = CK, 54 = CR, 55 = CI, 56 = HR, 57 = CU, 58 = CW, 59 = CY, 60 = CZ, 61 = DK, 62 = DJ, 63 = DM, 64 = DO, 65 = EC, 66 = EG, 67 = SV, 68 = GQ, 69 = ER, 70 = EE, 71 = ET, 72 = FK, 73 = FO, 74 = FJ, 75 = FI, 76 = FR, 77 = GF, 78 = PF, 79 = TF, 80 = GA, 81 = GM, 82 = GE, 83 = DE, 84 = GH, 85 = GI, 86 = GR, 87 = GL, 88 = GD, 89 = GP, 90 = GU, 91 = GT, 92 = GG, 93 = GN, 94 = GW, 95 = GY, 96 = HT, 97 = HM, 98 = VA, 99 = HN, 100 = HK, 101 = HU, 102 = IS, 103 = IN, 104 = ID, 105 = IR, 106 = IQ, 107 = IE, 108 = IM, 109 = IL, 110 = IT, 111 = JM, 112 = JP, 113 = JE, 114 = JO, 115 = KZ, 116 = KE, 117 = KI, 118 = KP, 119 = KR, 120 = KW, 121 = KG, 122 = LA, 123 = LV, 124 = LB, 125 = LS, 126 = LR, 127 = LY, 128 = LI, 129 = LT, 130 = LU, 131 = MO, 132 = MK, 133 = MG, 134 = MW, 135 = MY, 136 = MV, 137 = ML, 138 = MT, 139 = MH, 140 = MQ, 141 = MR, 142 = MU, 143 = YT, 144 = MX, 145 = FM, 146 = MD, 147 = MC, 148 = MN, 149 = ME, 150 = MS, 151 = MA, 152 = MZ, 153 = MM, 154 = NA, 155 = NR, 156 = NP, 157 = NL, 158 = NC, 159 = NZ, 160 = NI, 161 = NE, 162 = NG, 163 = NU, 164 = NF, 165 = MP, 166 = NO, 167 = OM, 168 = PK, 169 = PW, 170 = PS, 171 = PA, 172 = PG, 173 = PY, 174 = PE, 175 = PH, 176 = PN, 177 = PL, 178 = PT, 179 = PR, 180 = QA, 181 = RE, 182 = RO, 183 = RU, 184 = RW, 185 = BL, 186 = SH, 187 = KN, 188 = LC, 189 = MF, 190 = PM, 191 = VC, 192 = WS, 193 = SM, 194 = ST, 195 = SA, 196 = SN, 197 = RS, 198 = SC, 199 = SL, 200 = SG, 201 = SX, 202 = SK, 203 = SI, 204 = SB, 205 = SO, 206 = ZA, 207 = GS, 208 = SS, 209 = ES, 210 = LK, 211 = SD, 212 = SR, 213 = SJ, 214 = SZ, 215 = SE, 216 = CH, 217 = SY, 218 = TW, 219 = TJ, 220 = TZ, 221 = TH, 222 = TL, 223 = TG, 224 = TK, 225 = TO, 226 = TT, 227 = TN, 228 = TR, 229 = TM, 230 = TC, 231 = TV, 232 = UG, 233 = UA, 234 = AE, 235 = GB, 236 = US, 237 = UM, 238 = UY, 239 = UZ, 240 = VU, 241 = VE, 242 = VN, 243 = VG, 244 = VI, 245 = WF, 246 = EH, 247 = YE, 248 = ZM, 249 = ZW, 250 = XK",
        "format": "int32",
        "x-enumNames": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BQ",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "CV",
          "KH",
          "CM",
          "CA",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CW",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "VA",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MK",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SX",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "SS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SZ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "US",
          "UM",
          "UY",
          "UZ",
          "VU",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "YE",
          "ZM",
          "ZW",
          "XK"
        ],
        "x-enum-varnames": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BQ",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "CV",
          "KH",
          "CM",
          "CA",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CW",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "VA",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MK",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SX",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "SS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SZ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "US",
          "UM",
          "UY",
          "UZ",
          "VU",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "YE",
          "ZM",
          "ZW",
          "XK"
        ]
      },
      "DataImport": {
        "required": [
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "finished": {
            "type": "string",
            "description": "Gets or sets the Date/Time when the import was finished.",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier of the import.",
            "format": "uuid"
          },
          "importDataSource": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets information describing the import data source (filename, url, etc.).",
            "nullable": true
          },
          "importStatus": {
            "$ref": "#/components/schemas/DataImportStatus"
          },
          "importStatusJson": {
            "type": "string",
            "description": "Gets or sets the optional import status JSON text.",
            "nullable": true
          },
          "started": {
            "type": "string",
            "description": "Gets or sets the Date/Time when the import was started.",
            "format": "date-time"
          },
          "totalRecordsProcessed": {
            "type": "integer",
            "description": "Gets or sets the total number of records processed.",
            "format": "int32"
          },
          "type": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the type of the import (ex. LittleNavmapMSFS)."
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name of the user that initiated the import."
          }
        },
        "additionalProperties": false,
        "description": "Data import model."
      },
      "DataImportElement": {
        "type": "object",
        "properties": {
          "new": {
            "type": "integer",
            "description": "Gets or sets the number of new records inserted.",
            "format": "int32"
          },
          "percentDone": {
            "type": "integer",
            "description": "Gets the percent done.",
            "format": "int32",
            "readOnly": true
          },
          "processed": {
            "type": "integer",
            "description": "Gets or sets the number of records processed.",
            "format": "int32"
          },
          "skipped": {
            "type": "integer",
            "description": "Gets or sets the number of skipped records.",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Gets or sets the total number of records to be processed.",
            "format": "int32"
          },
          "updated": {
            "type": "integer",
            "description": "Gets or sets the number of updated records.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Data import element model."
      },
      "DataImportIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataImport"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "DataImportStatus": {
        "type": "object",
        "properties": {
          "elements": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataImportElement"
            },
            "description": "Gets or sets the elements.",
            "nullable": true
          },
          "percentDone": {
            "type": "integer",
            "description": "Gets the percent done.",
            "format": "int32",
            "readOnly": true
          },
          "processed": {
            "type": "integer",
            "description": "Gets or sets the number of records processed.",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Gets or sets the total number of records to be processed.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Data import status model."
      },
      "DataImportStatusApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataImportStatus"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "DoubleApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "number",
            "description": "Gets or sets the embedded data of type T.",
            "format": "double"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "EngineType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "Engine types (currently exactly matching SimConnect). 0 = Piston, 1 = Jet, 2 = None, 3 = HeloBellTurbine, 4 = Unsupported, 5 = Turboprop",
        "format": "int32",
        "x-enumNames": [
          "Piston",
          "Jet",
          "None",
          "HeloBellTurbine",
          "Unsupported",
          "Turboprop"
        ],
        "x-enum-varnames": [
          "Piston",
          "Jet",
          "None",
          "HeloBellTurbine",
          "Unsupported",
          "Turboprop"
        ]
      },
      "FinalReport": {
        "type": "object",
        "properties": {
          "finalPositionReport": {
            "$ref": "#/components/schemas/PositionReport"
          },
          "flightLog": {
            "type": "string",
            "description": "Gets or sets the flight log (final save).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Flight final report model."
      },
      "FinancialCategory": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          -1
        ],
        "type": "integer",
        "description": "Financial categories. 0 = None, 1 = Aircraft, 2 = Fuel, 3 = Maintenance, 4 = AirportFees, 5 = Salaries, 6 = Loan, 7 = Interest, 8 = Shares, 9 = Dividend, 10 = FBO, 11 = Cargo, 12 = Passengers, 13 = SpecialtyJobs, 14 = Fines, 15 = Ferry, -1 = Flight",
        "format": "int32",
        "x-enumNames": [
          "None",
          "Aircraft",
          "Fuel",
          "Maintenance",
          "AirportFees",
          "Salaries",
          "Loan",
          "Interest",
          "Shares",
          "Dividend",
          "FBO",
          "Cargo",
          "Passengers",
          "SpecialtyJobs",
          "Fines",
          "Ferry",
          "Flight"
        ],
        "x-enum-varnames": [
          "None",
          "Aircraft",
          "Fuel",
          "Maintenance",
          "AirportFees",
          "Salaries",
          "Loan",
          "Interest",
          "Shares",
          "Dividend",
          "FBO",
          "Cargo",
          "Passengers",
          "SpecialtyJobs",
          "Fines",
          "Ferry",
          "Flight"
        ]
      },
      "FinancialOverview": {
        "type": "object",
        "properties": {
          "accountBalance": {
            "type": "integer",
            "description": "Gets or sets the account balance (of the user).",
            "format": "int64"
          },
          "airlineAccountBalance": {
            "type": "integer",
            "description": "Gets or sets the airline account balance (if user has the permission).",
            "format": "int64",
            "nullable": true
          },
          "recentAirlineFinancialRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialRecord"
            },
            "description": "Gets or sets the recent airline financial records (if user has the permission).",
            "nullable": true
          },
          "recentFinancialRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialRecord"
            },
            "description": "Gets or sets the recent financial records (of the user).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Financial overview model."
      },
      "FinancialOverviewApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FinancialOverview"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "FinancialRecord": {
        "required": [
          "category",
          "description",
          "id"
        ],
        "type": "object",
        "properties": {
          "aircraftRegistry": {
            "maxLength": 10,
            "minLength": 5,
            "type": "string",
            "description": "Gets or sets the aircraft registry (optional, if record relates to an aircraft).",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/FinancialCategory"
          },
          "childRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialRecord"
            },
            "description": "Gets or sets the child records.",
            "nullable": true
          },
          "description": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the description of the record."
          },
          "expense": {
            "type": "integer",
            "description": "Gets or sets the expense amount in SkyBucks.",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the financial record.",
            "format": "uuid"
          },
          "income": {
            "type": "integer",
            "description": "Gets or sets the income amount in SkyBucks.",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "description": "Gets or sets the timestamp of the record.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Financial record model."
      },
      "Flight": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "aircraft": {
            "$ref": "#/components/schemas/Aircraft"
          },
          "airspeedTrue": {
            "type": "number",
            "description": "Gets or sets the true airspeed in knots.",
            "format": "double",
            "nullable": true
          },
          "alternate": {
            "$ref": "#/components/schemas/Airport"
          },
          "alternateRoute": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the alternate route.",
            "nullable": true
          },
          "altitude": {
            "type": "number",
            "description": "Gets or sets the altitude in feet.",
            "format": "double",
            "nullable": true
          },
          "atcCallsign": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the atc call sign for the flight - important for online flying.",
            "nullable": true
          },
          "bankAngle": {
            "type": "number",
            "description": "The bank angle in degrees.",
            "format": "double"
          },
          "destination": {
            "$ref": "#/components/schemas/Airport"
          },
          "dispatcherName": {
            "type": "string",
            "description": "Gets the name of the dispatcher.",
            "nullable": true,
            "readOnly": true
          },
          "dispatcherRemarks": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the dispatcher remarks.",
            "nullable": true
          },
          "flightNumber": {
            "type": "integer",
            "description": "Gets or sets the flight number (1-9999).",
            "format": "int32"
          },
          "flightPayloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPayload"
            },
            "description": "Gets or sets the flight payloads.",
            "nullable": true
          },
          "flightPhase": {
            "$ref": "#/components/schemas/FlightPhase"
          },
          "fuelGallons": {
            "type": "number",
            "description": "Gets or sets the fuel in gallons.",
            "format": "double",
            "nullable": true
          },
          "fuelLoadingComplete": {
            "type": "string",
            "description": "Gets or sets the Date/Time when fuel loading will be complete.",
            "format": "date-time",
            "nullable": true
          },
          "fuelTankCenter2Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center 2 quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankCenter3Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center 3 quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankCenterQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankExternal1Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank external 1 quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankExternal2Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank external 2 quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankLeftAuxQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left auxiliary quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankLeftMainQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left main quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankLeftTipQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left tip quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankRightAuxQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right auxiliary quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankRightMainQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right main quantity.",
            "format": "double",
            "nullable": true
          },
          "fuelTankRightTipQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right tip quantity.",
            "format": "double",
            "nullable": true
          },
          "fullFlightNumber": {
            "type": "string",
            "description": "Gets the full flight number (airline code and number combined).",
            "nullable": true,
            "readOnly": true
          },
          "groundSpeed": {
            "type": "number",
            "description": "Gets or sets the ground speed in knots.",
            "format": "double",
            "nullable": true
          },
          "hasAutoSaveLog": {
            "type": "boolean",
            "description": "Gets a value indicating whether this flight has an auto-saved log.",
            "readOnly": true
          },
          "heading": {
            "type": "number",
            "description": "The magnetic heading.",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the flight.",
            "format": "uuid"
          },
          "lastAutoSave": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the last auto-save.",
            "format": "date-time",
            "nullable": true
          },
          "lastPositionReport": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the last position report.",
            "format": "date-time",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "The latitude in degrees.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "The longitude in degrees.",
            "format": "double",
            "nullable": true
          },
          "navlogFixes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightNavlogFix"
            },
            "description": "Gets or sets the navlog fixes.",
            "nullable": true
          },
          "ofpHtml": {
            "type": "string",
            "description": "Gets or sets the OFP HTML (most likely from simBrief).",
            "nullable": true
          },
          "onGround": {
            "type": "boolean",
            "description": "Is the plane on the ground?"
          },
          "onlineNetwork": {
            "$ref": "#/components/schemas/OnlineNetwork"
          },
          "onlineNetworkConnectedSeconds": {
            "type": "integer",
            "description": "Gets or sets the seconds the player was connected to the online network for, used to\r\ncalculate 80% online requirement.",
            "format": "int32"
          },
          "operatorName": {
            "type": "string",
            "description": "Gets the name of the flight operator.",
            "nullable": true,
            "readOnly": true
          },
          "origin": {
            "$ref": "#/components/schemas/Airport"
          },
          "paused": {
            "type": "string",
            "description": "Gets or sets the Date/Time of when the flight was paused (so it can be resumed later).",
            "format": "date-time",
            "nullable": true
          },
          "payloadLoadingComplete": {
            "type": "string",
            "description": "Gets or sets the Date/Time when payload loading will be complete.",
            "format": "date-time",
            "nullable": true
          },
          "pitchAngle": {
            "type": "number",
            "description": "The pitch angle in degrees.",
            "format": "double"
          },
          "plannedDepartureTime": {
            "type": "string",
            "description": "Gets or sets the planned departure time.",
            "format": "date-time"
          },
          "radioHeight": {
            "type": "number",
            "description": "The radio height in feet.",
            "format": "double",
            "nullable": true
          },
          "route": {
            "type": "string",
            "description": "Gets or sets the route.",
            "nullable": true
          },
          "timeWarpTimeSavedSeconds": {
            "type": "integer",
            "description": "Gets or sets the time-warp time saved (in seconds).",
            "format": "int32"
          },
          "verticalSpeedSeconds": {
            "type": "number",
            "description": "The vertical speed in feet per second.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Flight model."
      },
      "FlightApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Flight"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "FlightIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flight"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "FlightLog": {
        "type": "object",
        "properties": {
          "aircraftEngineType": {
            "$ref": "#/components/schemas/EngineType"
          },
          "aircraftRegistry": {
            "type": "string",
            "description": "Gets or sets the aircraft registry.",
            "nullable": true
          },
          "aircraftType": {
            "type": "string",
            "description": "Gets or sets the type of the aircraft.",
            "nullable": true
          },
          "alternate": {
            "type": "string",
            "description": "Gets or sets the alternate.",
            "nullable": true
          },
          "alternateICAO": {
            "type": "string",
            "description": "Gets or sets the alternate airport ICAO code.",
            "nullable": true
          },
          "alternateRoute": {
            "type": "string",
            "description": "Gets or sets the alternate route.",
            "nullable": true
          },
          "atcCallsign": {
            "type": "string",
            "description": "Gets or sets the atc callsign.",
            "nullable": true
          },
          "completed": {
            "type": "string",
            "description": "Gets or sets the Date/Time of when the flight was completed.",
            "format": "date-time"
          },
          "crashed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the aircraft crashed."
          },
          "destination": {
            "type": "string",
            "description": "Gets or sets the Destination for the.",
            "nullable": true
          },
          "destinationICAO": {
            "type": "string",
            "description": "Gets or sets destination airport ICAO code.",
            "nullable": true
          },
          "dispatcher": {
            "type": "string",
            "description": "Gets or sets the dispatcher.",
            "nullable": true
          },
          "dispatcherRemarks": {
            "type": "string",
            "description": "Gets or sets the dispatcher remarks.",
            "nullable": true
          },
          "fuelConsumption": {
            "type": "number",
            "description": "Gets or sets the fuel consumption.",
            "format": "double"
          },
          "fuelWeightPerGallon": {
            "type": "number",
            "description": "Gets or sets the fuel weight per gallon.",
            "format": "double"
          },
          "fullFlightNumber": {
            "type": "string",
            "description": "Gets or sets the full flight number.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the flight.",
            "format": "uuid"
          },
          "isAirlineFlight": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is an airline flight or a private one."
          },
          "landedAt": {
            "type": "string",
            "description": "Gets or sets the landed at.",
            "nullable": true
          },
          "landedAtICAO": {
            "type": "string",
            "description": "Gets or sets the \"landed at\" airport ICAO code.",
            "nullable": true
          },
          "offBlockFuel": {
            "type": "number",
            "description": "Gets or sets the off block fuel.",
            "format": "double"
          },
          "onBlockFuel": {
            "type": "number",
            "description": "Gets or sets the on block fuel.",
            "format": "double"
          },
          "onlineNetwork": {
            "$ref": "#/components/schemas/OnlineNetwork"
          },
          "onlineNetworkConnectedSeconds": {
            "type": "integer",
            "description": "Gets or sets the online network connected seconds.",
            "format": "int32"
          },
          "operator": {
            "type": "string",
            "description": "Gets or sets the operator.",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "Gets or sets the origin.",
            "nullable": true
          },
          "originICAO": {
            "type": "string",
            "description": "Gets or sets the origin airport ICAO code.",
            "nullable": true
          },
          "pilot": {
            "type": "string",
            "description": "Gets or sets the pilot.",
            "nullable": true
          },
          "plannedDepartureTime": {
            "type": "string",
            "description": "Gets or sets the planned departure time.",
            "format": "date-time"
          },
          "route": {
            "type": "string",
            "description": "Gets or sets the route.",
            "nullable": true
          },
          "simulator": {
            "$ref": "#/components/schemas/Simulator"
          },
          "started": {
            "type": "string",
            "description": "Gets or sets the Date/Time of when the flight was started.",
            "format": "date-time"
          },
          "timeWarpTimeSavedSeconds": {
            "type": "integer",
            "description": "Gets or sets the time-warp time saved (in seconds).",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Flight log model."
      },
      "FlightLogDetails": {
        "type": "object",
        "properties": {
          "flightLog": {
            "type": "string",
            "description": "Gets or sets the final flight log file (base64 encoded, gzipped xml).",
            "nullable": true
          },
          "ofpHtml": {
            "type": "string",
            "description": "Gets or sets the OFP HTML (most likely from simBrief).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Flight log details model."
      },
      "FlightLogDetailsApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlightLogDetails"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "FlightLogIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightLog"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "FlightNavlogFix": {
        "required": [
          "flightID",
          "ident",
          "type"
        ],
        "type": "object",
        "properties": {
          "fixNumber": {
            "type": "integer",
            "description": "Gets or sets the fix number.",
            "format": "int32"
          },
          "flightID": {
            "type": "string",
            "description": "Gets or sets the identifier of the flight.",
            "format": "uuid"
          },
          "ident": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the ident of the fix."
          },
          "latitude": {
            "type": "number",
            "description": "Gets or sets the latitude.",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Gets or sets the longitude.",
            "format": "double"
          },
          "type": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the type of the fix."
          }
        },
        "additionalProperties": false,
        "description": "Flight navigation log fix model."
      },
      "FlightPayload": {
        "type": "object",
        "properties": {
          "flightID": {
            "type": "string",
            "description": "Gets or sets the identifier of the flight.",
            "format": "uuid"
          },
          "payload": {
            "$ref": "#/components/schemas/Payload"
          },
          "payloadID": {
            "type": "string",
            "description": "Gets or sets the identifier of the payload.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Flight payload model."
      },
      "FlightPhase": {
        "enum": [
          0,
          1,
          2,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          99
        ],
        "type": "integer",
        "description": "Values that represent OpenSky flight phases. 0 = Briefing, 1 = Unknown, 2 = UnTracked, 10 = PreFlight, 11 = PushBack, 12 = TaxiOut, 13 = Takeoff, 14 = Departure, 15 = Climb, 16 = Cruise, 17 = Descent, 18 = Approach, 19 = Landing, 20 = GoAround, 21 = TaxiIn, 22 = PostFlight, 99 = Crashed",
        "format": "int32",
        "x-enumNames": [
          "Briefing",
          "Unknown",
          "UnTracked",
          "PreFlight",
          "PushBack",
          "TaxiOut",
          "Takeoff",
          "Departure",
          "Climb",
          "Cruise",
          "Descent",
          "Approach",
          "Landing",
          "GoAround",
          "TaxiIn",
          "PostFlight",
          "Crashed"
        ],
        "x-enum-varnames": [
          "Briefing",
          "Unknown",
          "UnTracked",
          "PreFlight",
          "PushBack",
          "TaxiOut",
          "Takeoff",
          "Departure",
          "Climb",
          "Cruise",
          "Descent",
          "Approach",
          "Landing",
          "GoAround",
          "TaxiIn",
          "PostFlight",
          "Crashed"
        ]
      },
      "FlightPlan": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "aircraft": {
            "$ref": "#/components/schemas/Aircraft"
          },
          "alternateICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the alternate airport ICAO code.",
            "nullable": true
          },
          "alternateRoute": {
            "type": "string",
            "description": "Gets or sets the alternate route.",
            "nullable": true
          },
          "atcCallsign": {
            "type": "string",
            "description": "Gets or sets the atc call sign.",
            "nullable": true
          },
          "destinationICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets destination airport ICAO code.",
            "nullable": true
          },
          "dispatcherID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the dispatcher.",
            "nullable": true
          },
          "dispatcherName": {
            "type": "string",
            "description": "Gets or sets the name of the dispatcher (read only, for display in list view, not for editing!).",
            "nullable": true
          },
          "dispatcherRemarks": {
            "type": "string",
            "description": "Gets or sets the dispatcher remarks.",
            "nullable": true
          },
          "flightNumber": {
            "type": "integer",
            "description": "Gets or sets the flight number (1-9999).",
            "format": "int32"
          },
          "fuelGallons": {
            "type": "number",
            "description": "Gets or sets the fuel in gallons.",
            "format": "double",
            "nullable": true
          },
          "fullFlightNumber": {
            "type": "string",
            "description": "Gets the full flight number (airline code and number combined)(read only, for display in list view, not for editing!).",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the flight.",
            "format": "uuid"
          },
          "isAirlineFlight": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is an airline flight or a private one."
          },
          "navlogFixes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightNavlogFix"
            },
            "description": "Gets or sets the navlog fixes.",
            "nullable": true
          },
          "ofpHtml": {
            "type": "string",
            "description": "Gets or sets the OFP HTML (most likely from simBrief).",
            "nullable": true
          },
          "onlineNetwork": {
            "$ref": "#/components/schemas/OnlineNetwork"
          },
          "originICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the origin airport ICAO code.",
            "nullable": true
          },
          "payloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPayload"
            },
            "description": "Gets or sets the payloads.",
            "nullable": true
          },
          "plannedDepartureTime": {
            "type": "string",
            "description": "Gets or sets the planned departure time.",
            "format": "date-time"
          },
          "route": {
            "type": "string",
            "description": "Gets or sets the route.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Flight plan model."
      },
      "FlightPlanIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlan"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "ForgotPassword": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email.",
            "format": "email"
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Forgot password model."
      },
      "FuelType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          99
        ],
        "type": "integer",
        "description": "Fuel types (derived from engine type, SimConnect doesn't report this). 0 = AvGas, 1 = JetFuel, 2 = None, 3 = Hydrogen, 4 = Electricity, 99 = NotUsed",
        "format": "int32",
        "x-enumNames": [
          "AvGas",
          "JetFuel",
          "None",
          "Hydrogen",
          "Electricity",
          "NotUsed"
        ],
        "x-enum-varnames": [
          "AvGas",
          "JetFuel",
          "None",
          "Hydrogen",
          "Electricity",
          "NotUsed"
        ]
      },
      "GroundOperations": {
        "type": "object",
        "properties": {
          "allowFuelTrucking": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether we allow fuel trucking."
          },
          "fuel": {
            "type": "number",
            "description": "Gets or sets the target fuel in gallons.",
            "format": "double"
          },
          "payloads": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the target payloads.",
            "nullable": true
          },
          "registry": {
            "type": "string",
            "description": "Gets or sets the aircraft registry.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ground operations model."
      },
      "GuidApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Gets or sets the embedded data of type T.",
            "format": "uuid"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "GuidNullableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Gets or sets the embedded data of type T.",
            "format": "uuid",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "Job": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "assignedAirlineDispatcherID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the assigned airline dispatcher (should not be set for user operated flights - will be ignored).",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/AircraftTypeCategory"
          },
          "expiresAt": {
            "type": "string",
            "description": "Gets or sets the Date/Time the job expires at.",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the job.",
            "format": "uuid"
          },
          "operatorAirlineID": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the airline operator of this flight (either this or OperatorID\r\nmust be set.",
            "nullable": true
          },
          "operatorID": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the identifier of the operator of this flight (either this or OperatorAirlineID\r\nmust be set.",
            "nullable": true
          },
          "operatorName": {
            "type": "string",
            "description": "Gets the name of the flight operator.",
            "nullable": true,
            "readOnly": true
          },
          "originICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the origin airport icao.",
            "nullable": true
          },
          "payloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payload"
            },
            "description": "Gets or sets the payloads.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/JobType"
          },
          "userIdentifier": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets a user-settable identifier string for the job.",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "Gets or sets the job value in SkyBucks.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Job model."
      },
      "JobDirection": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "Job directions. 0 = From, 1 = To, 2 = RoundTrip",
        "format": "int32",
        "x-enumNames": [
          "From",
          "To",
          "RoundTrip"
        ],
        "x-enum-varnames": [
          "From",
          "To",
          "RoundTrip"
        ]
      },
      "JobIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "JobType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Job types. 0 = Cargo_L, 1 = Cargo_S",
        "format": "int32",
        "x-enumNames": [
          "Cargo_L",
          "Cargo_S"
        ],
        "x-enum-varnames": [
          "Cargo_L",
          "Cargo_S"
        ]
      },
      "LinkedAccounts": {
        "type": "object",
        "properties": {
          "bingMapsKey": {
            "type": "string",
            "description": "Gets or sets the Bing maps API key.",
            "nullable": true
          },
          "simbriefUsername": {
            "type": "string",
            "description": "Gets or sets the Simbrief username.",
            "nullable": true
          },
          "vatsimID": {
            "type": "string",
            "description": "Gets or sets the Vatsim user ID.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Linked accounts and keys model."
      },
      "LinkedAccountsApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LinkedAccounts"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "Login": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password."
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to remember the user login (extends JWT token expiry)."
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username."
          }
        },
        "additionalProperties": false,
        "description": "Login model."
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the expiration.",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "description": "Gets or sets the refresh token.",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the refresh token expiration.",
            "format": "date-time"
          },
          "token": {
            "type": "string",
            "description": "Gets or sets the token.",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Gets or sets the username (in case the user logged in with the email address).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Login response model."
      },
      "LoginResponseApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "ModeratorRole": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "isModerator": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this user should be a moderator."
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username."
          }
        },
        "additionalProperties": false,
        "description": "Moderator role model."
      },
      "NewAircraftDeliveryOption": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "New aircraft delivery options. 0 = ManufacturerDeliveryAirport, 1 = ManufacturerFerry, 2 = OutsourceFerry",
        "format": "int32",
        "x-enumNames": [
          "ManufacturerDeliveryAirport",
          "ManufacturerFerry",
          "OutsourceFerry"
        ],
        "x-enum-varnames": [
          "ManufacturerDeliveryAirport",
          "ManufacturerFerry",
          "OutsourceFerry"
        ]
      },
      "OnlineNetwork": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Online aviation networks. 0 = Offline, 1 = Vatsim",
        "format": "int32",
        "x-enumNames": [
          "Offline",
          "Vatsim"
        ],
        "x-enum-varnames": [
          "Offline",
          "Vatsim"
        ]
      },
      "Payload": {
        "required": [
          "description",
          "id",
          "jobID"
        ],
        "type": "object",
        "properties": {
          "aircraftRegistry": {
            "maxLength": 10,
            "minLength": 5,
            "type": "string",
            "description": "Gets or sets the aircraft registry the payload is currently loaded on, or NULL if stored at an airport.",
            "nullable": true
          },
          "airportICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airport icao the payload is currently stored at, or NULL if onboard an aircraft.",
            "nullable": true
          },
          "description": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the payload description."
          },
          "destinationICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the destination icao for the payload.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the payload.",
            "format": "uuid"
          },
          "jobID": {
            "type": "string",
            "description": "Gets or sets the identifier of the job.",
            "format": "uuid"
          },
          "weight": {
            "type": "number",
            "description": "Gets or sets the payload weight in lbs.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Payload model."
      },
      "PieChartValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gets or sets the key.",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "Gets or sets the value.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Pie chart value."
      },
      "PlannablePayload": {
        "type": "object",
        "properties": {
          "currentLocation": {
            "type": "string",
            "description": "Gets or sets the current location (airport or aircraft).",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "nullable": true
          },
          "destinationICAO": {
            "type": "string",
            "description": "Gets or sets destination ICAO code.",
            "nullable": true
          },
          "flights": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the flights the payload is planned to fly on.",
            "nullable": true
          },
          "destinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the destinations this payload is planning to go to.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier of the payload.",
            "format": "uuid"
          },
          "weight": {
            "type": "number",
            "description": "Gets or sets the weight in lbs.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "(Flight)Plannable payload."
      },
      "PlannablePayloadIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannablePayload"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "PositionReport": {
        "type": "object",
        "properties": {
          "airspeedTrue": {
            "type": "number",
            "description": "Gets or sets the true airspeed in knots.",
            "format": "double"
          },
          "altitude": {
            "type": "number",
            "description": "Gets or sets the altitude in feet.",
            "format": "double"
          },
          "bankAngle": {
            "type": "number",
            "description": "The bank angle in degrees.",
            "format": "double"
          },
          "connectedToOnlineNetworkSeconds": {
            "type": "integer",
            "description": "Gets or sets the number of seconds the user was connected to an online network (in seconds).",
            "format": "int32"
          },
          "flightPhase": {
            "$ref": "#/components/schemas/FlightPhase"
          },
          "fuelTankCenter2Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center 2 quantity.",
            "format": "double"
          },
          "fuelTankCenter3Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center 3 quantity.",
            "format": "double"
          },
          "fuelTankCenterQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank center quantity.",
            "format": "double"
          },
          "fuelTankExternal1Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank external 1 quantity.",
            "format": "double"
          },
          "fuelTankExternal2Quantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank external 2 quantity.",
            "format": "double"
          },
          "fuelTankLeftAuxQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left auxiliary quantity.",
            "format": "double"
          },
          "fuelTankLeftMainQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left main quantity.",
            "format": "double"
          },
          "fuelTankLeftTipQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank left tip quantity.",
            "format": "double"
          },
          "fuelTankRightAuxQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right auxiliary quantity.",
            "format": "double"
          },
          "fuelTankRightMainQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right main quantity.",
            "format": "double"
          },
          "fuelTankRightTipQuantity": {
            "type": "number",
            "description": "Gets or sets the fuel tank right tip quantity.",
            "format": "double"
          },
          "groundSpeed": {
            "type": "number",
            "description": "Gets or sets the ground speed in knots.",
            "format": "double"
          },
          "heading": {
            "type": "number",
            "description": "The magnetic heading.",
            "format": "double"
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier for the flight.",
            "format": "uuid"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude in degrees.",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude in degrees.",
            "format": "double"
          },
          "onGround": {
            "type": "boolean",
            "description": "Is the plane on the ground?"
          },
          "pitchAngle": {
            "type": "number",
            "description": "The pitch angle in degrees.",
            "format": "double"
          },
          "radioHeight": {
            "type": "number",
            "description": "The radio height in feet.",
            "format": "double",
            "nullable": true
          },
          "timeWarpTimeSavedSeconds": {
            "type": "integer",
            "description": "Gets or sets the time-warp time saved (in seconds).",
            "format": "int32"
          },
          "verticalSpeedSeconds": {
            "type": "number",
            "description": "The vertical speed in feet per second.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Flight position report model."
      },
      "ProcessingStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "General purpose enum for handling different states of an entity Import, queued tasks etc... 0 = NeedsHandling, 1 = Queued, 2 = Finished, 3 = Failed",
        "format": "int32",
        "x-enumNames": [
          "NeedsHandling",
          "Queued",
          "Finished",
          "Failed"
        ],
        "x-enum-varnames": [
          "NeedsHandling",
          "Queued",
          "Finished",
          "Failed"
        ]
      },
      "PurchaseAircraft": {
        "required": [
          "registry"
        ],
        "type": "object",
        "properties": {
          "forAirline": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to purchase the aircraft for the airline or the user."
          },
          "registry": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the registry."
          },
          "variantID": {
            "type": "string",
            "description": "Gets or sets the identifier of the variant (can be Guid.Empty).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Purchase aircraft model."
      },
      "PurchaseNewAircraft": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "deliveryAirportICAO": {
            "type": "string",
            "description": "Gets or sets the delivery airport ICAO.",
            "nullable": true
          },
          "deliveryOption": {
            "$ref": "#/components/schemas/NewAircraftDeliveryOption"
          },
          "ferryAirportICAO": {
            "type": "string",
            "description": "Gets or sets the ferry airport ICAO.",
            "nullable": true
          },
          "forAirline": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to purchase the aircraft for the airline or the user."
          },
          "numberOfAircraft": {
            "type": "integer",
            "description": "Gets or sets the number of aircraft to purchase.",
            "format": "int32"
          },
          "outsourceFerryRate": {
            "type": "integer",
            "description": "Gets or sets the outsource ferry rate (SkyBucks / NM).",
            "format": "int32"
          },
          "typeID": {
            "type": "string",
            "description": "Gets or sets the identifier of the type.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Purchase new aircraft model."
      },
      "ReRegisterAircraft": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Gets or sets the old registry.",
            "nullable": true
          },
          "inCountry": {
            "$ref": "#/components/schemas/Country"
          },
          "to": {
            "type": "string",
            "description": "Gets or sets the new registry.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Re-register aircraft model."
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string",
            "description": "Gets or sets the refresh token.",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Gets or sets the token.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Refresh JWT token model."
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the expiration.",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "description": "Gets or sets the refresh token.",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the refresh token expiration.",
            "format": "date-time"
          },
          "token": {
            "type": "string",
            "description": "Gets or sets the token.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Refresh token response model."
      },
      "RefreshTokenResponseApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RefreshTokenResponse"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "RegisterUser": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email.",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password."
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          },
          "username": {
            "maxLength": 15,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the username."
          }
        },
        "additionalProperties": false,
        "description": "Register user model."
      },
      "ResendValidationEmail": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email.",
            "format": "email"
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resend validation email model."
      },
      "ResetPassword": {
        "required": [
          "email",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email.",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the password."
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          },
          "resetTokens": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to reset all OpenSky api tokens."
          },
          "token": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the token."
          }
        },
        "additionalProperties": false,
        "description": "Reset password model."
      },
      "RevokeToken": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the OpenSky refresh token ID to invalidate."
          }
        },
        "additionalProperties": false,
        "description": "Revoke token model."
      },
      "RevokeTokenByName": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the expiry.",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Revoke token by name and expiry model."
      },
      "Runway": {
        "required": [
          "airportICAO",
          "surface"
        ],
        "type": "object",
        "properties": {
          "airportICAO": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airport ICAO."
          },
          "altitude": {
            "type": "integer",
            "description": "Gets or sets the altitude.",
            "format": "int32"
          },
          "centerLight": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "The type of center lighting (NULL for no lighting).",
            "nullable": true
          },
          "edgeLight": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "The type of available edge lighting (NULL for no lighting).",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the runway ID.",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Gets or sets the length of the runway in feet.",
            "format": "int32"
          },
          "runwayEnds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunwayEnd"
            },
            "description": "Gets or sets the runway ends.",
            "nullable": true
          },
          "surface": {
            "maxLength": 7,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the surface type (can be \"UNKNOWN\" in a few cases)."
          },
          "width": {
            "type": "integer",
            "description": "Gets or sets the width of the runway in feet.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Runway model."
      },
      "RunwayEnd": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "approachLightSystem": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the approach light system (NULL for no approach light).",
            "nullable": true
          },
          "hasClosedMarkings": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the runway end has closed markings painted on it."
          },
          "heading": {
            "type": "number",
            "description": "Gets or sets the compass heading.",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "description": "Gets or sets the runway end ID.",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "description": "Gets or sets the latitude.",
            "format": "double"
          },
          "leftVasiPitch": {
            "type": "number",
            "description": "Gets or sets the left VASI pitch angle.",
            "format": "double",
            "nullable": true
          },
          "leftVasiType": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the left VASI (Visual approach slope indicator) type.",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "Gets or sets the longitude.",
            "format": "double"
          },
          "name": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the name (for example 04L)."
          },
          "offsetThreshold": {
            "type": "integer",
            "description": "Gets or sets the offset threshold in feet.",
            "format": "int32"
          },
          "rightVasiPitch": {
            "type": "number",
            "description": "Gets or sets the right VASI pitch angle.",
            "format": "double",
            "nullable": true
          },
          "rightVasiType": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the right VASI (Visual approach slope indicator) type.",
            "nullable": true
          },
          "runwayID": {
            "type": "integer",
            "description": "Gets or sets the parent runway ID.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Runway-End model."
      },
      "Simulator": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Simulators. 0 = MSFS, 1 = XPlane11",
        "format": "int32",
        "x-enumNames": [
          "MSFS",
          "XPlane11"
        ],
        "x-enum-varnames": [
          "MSFS",
          "XPlane11"
        ]
      },
      "StartFlight": {
        "type": "object",
        "properties": {
          "flightID": {
            "type": "string",
            "description": "Gets or sets the identifier of the flight.",
            "format": "uuid"
          },
          "overrideStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StartFlightStatus"
            },
            "description": "Gets or sets a list of states to override the checks for.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Start flight model."
      },
      "StartFlightStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          -1
        ],
        "type": "integer",
        "description": "Start flight status. 0 = Started, 1 = AircraftNotAtOrigin, 2 = OriginDoesntSellAvGas, 3 = OriginDoesntSellJetFuel, 4 = NonFlightPlanPayloadsFound, -1 = Error",
        "format": "int32",
        "x-enumNames": [
          "Started",
          "AircraftNotAtOrigin",
          "OriginDoesntSellAvGas",
          "OriginDoesntSellJetFuel",
          "NonFlightPlanPayloadsFound",
          "Error"
        ],
        "x-enum-varnames": [
          "Started",
          "AircraftNotAtOrigin",
          "OriginDoesntSellAvGas",
          "OriginDoesntSellJetFuel",
          "NonFlightPlanPayloadsFound",
          "Error"
        ]
      },
      "StartFlightStatusApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StartFlightStatus"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "StringApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "StringIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "Token": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the expiry of the token.",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the token (ex. website, agent-msfs, etc.).",
            "nullable": true
          },
          "tokenGeo": {
            "type": "string",
            "description": "Gets or sets the geo location (country) the token was created from.",
            "nullable": true
          },
          "tokenIP": {
            "type": "string",
            "description": "Gets or sets the IP address the token was created from.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Token model."
      },
      "TokenIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "UpdateAircraft": {
        "required": [
          "registry"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets the user-chosen name of the aircraft.",
            "nullable": true
          },
          "purchasePrice": {
            "type": "integer",
            "description": "Gets or sets the purchase price.",
            "format": "int32",
            "nullable": true
          },
          "registry": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the registry of the aircraft to update."
          },
          "rentPrice": {
            "type": "integer",
            "description": "Gets or sets the rent price.",
            "format": "int32",
            "nullable": true
          },
          "variantID": {
            "type": "string",
            "description": "Gets or sets the identifier of the variant (can be set to Guid.Empty to leave unchanged).",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Update aircraft model."
      },
      "User": {
        "type": "object",
        "properties": {
          "accessFailedCount": {
            "type": "integer",
            "description": "Gets or sets the number of failed access attempts.",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the email.",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the user confirmed the email address."
          },
          "id": {
            "type": "string",
            "description": "Gets or sets the user identifier.",
            "format": "uuid"
          },
          "lastLogin": {
            "type": "string",
            "description": "Gets or sets the Date/Time of the last login.",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginGeo": {
            "type": "string",
            "description": "Gets or sets the last login geo location if available.",
            "nullable": true
          },
          "lastLoginIP": {
            "type": "string",
            "description": "Gets or sets the last login IP.",
            "nullable": true
          },
          "registeredOn": {
            "type": "string",
            "description": "Gets or sets the Date/Time the user registered on.",
            "format": "date-time"
          },
          "username": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the roles of the user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OpenSky user model."
      },
      "UserAirline": {
        "type": "object",
        "properties": {
          "iata": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "Gets or sets the optional IATA code of the airline.",
            "nullable": true
          },
          "icao": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Gets or sets the airline ICAO code.",
            "nullable": true
          },
          "name": {
            "maxLength": 50,
            "minLength": 4,
            "type": "string",
            "description": "Gets or sets the name of the airline.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "User airline information data contract."
      },
      "UserAirlineApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserAirline"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "UserIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "ValidateEmail": {
        "required": [
          "email",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email.",
            "format": "email"
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Gets or sets the recaptcha token.",
            "nullable": true
          },
          "token": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the token."
          }
        },
        "additionalProperties": false,
        "description": "Validate email model."
      },
      "WorldMapFlight": {
        "type": "object",
        "properties": {
          "aircraftRegistry": {
            "type": "string",
            "description": "Gets or sets the aircraft registry.",
            "nullable": true
          },
          "aircraftType": {
            "type": "string",
            "description": "Gets or sets the type of the aircraft.",
            "nullable": true
          },
          "altitude": {
            "type": "number",
            "description": "Gets or sets the altitude in feet.",
            "format": "double"
          },
          "destination": {
            "type": "string",
            "description": "Gets or sets the Destination for the.",
            "nullable": true
          },
          "flightPhase": {
            "$ref": "#/components/schemas/FlightPhase"
          },
          "fullFlightNumber": {
            "type": "string",
            "description": "Gets or sets the full flight number.",
            "nullable": true
          },
          "groundSpeed": {
            "type": "number",
            "description": "Gets or sets the ground speed in knots.",
            "format": "double"
          },
          "heading": {
            "type": "number",
            "description": "The magnetic heading.",
            "format": "double"
          },
          "isPaused": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this flight is paused."
          },
          "latitude": {
            "type": "number",
            "description": "The latitude in degrees.",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude in degrees.",
            "format": "double"
          },
          "onGround": {
            "type": "boolean",
            "description": "Is the plane on the ground?"
          },
          "operator": {
            "type": "string",
            "description": "Gets or sets the operator.",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "Gets or sets the origin.",
            "nullable": true
          },
          "pilot": {
            "type": "string",
            "description": "Gets or sets the pilot.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "World map flight."
      },
      "WorldMapFlightIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorldMapFlight"
            },
            "description": "Gets or sets the embedded data of type T.",
            "nullable": true
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      },
      "WorldStatisticsOverview": {
        "type": "object",
        "properties": {
          "aircraftCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for aircraft categories.",
            "nullable": true
          },
          "aircraftOwner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for aircraft ownership.",
            "nullable": true
          },
          "airportSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for airport sizes.",
            "nullable": true
          },
          "approachTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for approach types.",
            "nullable": true
          },
          "completedFlights": {
            "type": "integer",
            "description": "Gets or sets the completed flights.",
            "format": "int32"
          },
          "completedFlightsMSFS": {
            "type": "integer",
            "description": "Gets or sets the completed flights for MSFS.",
            "format": "int32"
          },
          "completedFlightsXP11": {
            "type": "integer",
            "description": "Gets or sets the completed flights for XPlane11.",
            "format": "int32"
          },
          "flightAircraftCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for flight aircraft categories.",
            "nullable": true
          },
          "flightOperators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for flight operators.",
            "nullable": true
          },
          "fuelAvailability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for fuel availability at airports.",
            "nullable": true
          },
          "jobAircraftCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for job categories.",
            "nullable": true
          },
          "jobOperators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for job operators.",
            "nullable": true
          },
          "jobsGenerated": {
            "type": "integer",
            "description": "Gets or sets the jobs generated.",
            "format": "int32"
          },
          "jobTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for job types.",
            "nullable": true
          },
          "runwayLights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for runway lights.",
            "nullable": true
          },
          "runwaySurfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PieChartValue"
            },
            "description": "Gets or sets a pie chart series for runway surfaces.",
            "nullable": true
          },
          "totalAircraft": {
            "type": "integer",
            "description": "Gets or sets the total number of aircraft.",
            "format": "int32"
          },
          "totalAircraftMSFS": {
            "type": "integer",
            "description": "Gets or sets the total number of aircraft for MSFS.",
            "format": "int32"
          },
          "totalAircraftXP11": {
            "type": "integer",
            "description": "Gets or sets the total number of aircraft for XPlane11.",
            "format": "int32"
          },
          "totalAirports": {
            "type": "integer",
            "description": "Gets or sets the total number of airports.",
            "format": "int32"
          },
          "totalAirportsMSFS": {
            "type": "integer",
            "description": "Gets or sets the total number of airports for MSFS.",
            "format": "int32"
          },
          "totalAirportsXP11": {
            "type": "integer",
            "description": "Gets or sets the total number of airports for XPlane11.",
            "format": "int32"
          },
          "totalApproaches": {
            "type": "integer",
            "description": "Gets or sets the total number of approaches.",
            "format": "int32"
          },
          "totalApproachesMSFS": {
            "type": "integer",
            "description": "Gets or sets the total number of approaches for MSFS.",
            "format": "int32"
          },
          "totalApproachesXP11": {
            "type": "integer",
            "description": "Gets or sets the total number of approaches for XPlane11.",
            "format": "int32"
          },
          "totalJobs": {
            "type": "integer",
            "description": "Gets or sets the total number of jobs.",
            "format": "int32"
          },
          "totalJobsMSFS": {
            "type": "integer",
            "description": "Gets or sets the total number of jobs for MSFS.",
            "format": "int32"
          },
          "totalJobsXP11": {
            "type": "integer",
            "description": "Gets or sets the total number of jobs for XPlane11.",
            "format": "int32"
          },
          "totalRunways": {
            "type": "integer",
            "description": "Gets or sets the total number of runways.",
            "format": "int32"
          },
          "totalRunwaysMSFS": {
            "type": "integer",
            "description": "Gets or sets the total number of runways for MSFS.",
            "format": "int32"
          },
          "totalRunwaysXP11": {
            "type": "integer",
            "description": "Gets or sets the total number of runways for XPlane11.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "World statistics overview model."
      },
      "WorldStatisticsOverviewApiResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorldStatisticsOverview"
          },
          "errorDetails": {
            "type": "string",
            "description": "Gets or sets the error details (NULL if no error).",
            "nullable": true
          },
          "isError": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this response is reporting an error."
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API standard response model."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\nEnter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: 'Bearer xxxxxxxxxxxxxxxxx'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}