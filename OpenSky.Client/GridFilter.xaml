<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019"
                    xmlns:dgx="urn:tom-englert.de/DataGridExtensions"
                    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:toms="urn:TomsToolbox">
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <StreamGeometry x:Key="Cancel">M 10.888672 10 L 17.626953 16.748047 L 16.748047 17.626953 L 10 10.888672 L 3.251953 17.626953 L 2.373047 16.748047 L 9.111328 10 L 2.373047 3.251953 L 3.251953 2.373047 L 10 9.111328 L 16.748047 2.373047 L 17.626953 3.251953 Z</StreamGeometry>
                    </ControlTemplate.Resources>
                    <Border
                                            x:Name="ButtonLayoutGrid"
                                            BorderBrush="{DynamicResource TextControlButtonBorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{DynamicResource TextControlButtonBackground}"
                                            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                        <ui:FontIconFallback
                                                x:Name="GlyphElement"
                                                Foreground="{DynamicResource TextControlButtonForeground}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                FontStyle="Normal"
                                                FontSize="12"
                                                Data="{StaticResource Cancel}"
                                                FontFamily="{DynamicResource SymbolThemeFontFamily}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}" />
                            <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}" />
                            <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilteredDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeaderForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{DynamicResource GridLinesBrush}" />
        <Setter Property="Padding" Value="12,0,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <ControlTemplate.Resources>
                        <StreamGeometry x:Key="SortIconAscending">M 18.310547 10.126953 L 10.625 2.441406 L 10.625 20 L 9.375 20 L 9.375 2.441406 L 1.689453 10.126953 L 0.810547 9.248047 L 10 0.058594 L 19.189453 9.248047 Z</StreamGeometry>
                        <StreamGeometry x:Key="SortIconDescending">M 19.189453 10.751953 L 10 19.941406 L 0.810547 10.751953 L 1.689453 9.873047 L 9.375 17.558594 L 9.375 0 L 10.625 0 L 10.625 17.558594 L 18.310547 9.873047 Z</StreamGeometry>
                    </ControlTemplate.Resources>
                    <Grid x:Name="ColumnHeaderRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Data">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SortIconDescending}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Rectangle
                            x:Name="BackgroundRectangle"
                            Stretch="Fill"
                            Fill="{TemplateBinding Background}"
                            Grid.ColumnSpan="2" />

                        <Grid
                            Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="SortIconColumn" MinWidth="32" Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <ui:FontIconFallback
                                Grid.Column="1"
                                x:Name="SortIcon"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                Data="{StaticResource SortIconAscending}"
                                FontSize="12"
                                Foreground="{DynamicResource DataGridColumnHeaderForegroundBrush}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="Collapsed" />

                            <dgx:DataGridFilterColumnControl Grid.Column="2"  />
                        </Grid>
                        <Rectangle
                            x:Name="VerticalSeparator"
                            Grid.Column="1"
                            Width="1"
                            VerticalAlignment="Stretch"
                            Fill="{TemplateBinding SeparatorBrush}"
                            Visibility="{TemplateBinding SeparatorVisibility}" />

                        <Grid
                            Grid.Column="0" x:Name="FocusVisual"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <Rectangle
                                x:Name="FocusVisualPrimary"
                                Stroke="{DynamicResource DataGridCellFocusVisualPrimaryBrush}"
                                StrokeThickness="2"
                                Fill="Transparent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                IsHitTestVisible="False" />
                            <Rectangle
                                x:Name="FocusVisualSecondary"
                                Stroke="{DynamicResource DataGridCellFocusVisualSecondaryBrush}"
                                StrokeThickness="1"
                                Fill="Transparent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                IsHitTestVisible="False"
                                Margin="2" />
                        </Grid>

                        <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            Grid.ColumnSpan="2" Grid.Column="0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.ColumnSpan="2" Grid.Column="0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderHoveredBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="{DynamicResource DataGridColumnHeaderPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="SortIconColumn" Property="MinWidth" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Padding" Value="12,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static dgx:DataGridFilter.ColumnHeaderSearchTextBoxClearButtonStyleKey}" TargetType="Button">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
    <Style x:Key="{x:Static dgx:DataGridFilter.ColumnHeaderSearchTextBoxStyleKey}" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Margin" Value="4,2,2,2" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Background" Value="#212121" />
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background" Value="#212121" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
    <Style x:Key="{x:Static dgx:DataGridFilter.ColumnHeaderSearchCheckBoxStyleKey}" TargetType="CheckBox" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Setter Property="IsThreeState" Value="True" />
        <Setter Property="Margin" Value="4,0,-15,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="MaxWidth" Value="32" />
        <Style.Triggers>
            <Trigger Property="CheckBox.IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type dgx:MultipleChoiceFilter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dgx:MultipleChoiceFilter}">
                    <StackPanel Orientation="Horizontal">
                        <Decorator Width="5" />
                        <ToggleButton x:Name="ToggleButton" Background="Transparent" Style="{DynamicResource {x:Type ToggleButton}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="IsFilterActiveMarker" Text="." Margin="2,0,-4,0" Foreground="{Binding ElementName=FilterSymbol, Path=Foreground}" FontWeight="Bold" />
                                <Control x:Name="FilterSymbol" Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" />
                            </StackPanel>
                        </ToggleButton>
                        <Popup x:Name="Popup" StaysOpen="False" IsOpen="{Binding Path=IsChecked, ElementName=ToggleButton, Mode=OneWay}">
                            <FrameworkElement.Resources>
                                <CollectionViewSource x:Key="SortedValuesSource" Source="{Binding Values, RelativeSource={RelativeSource TemplatedParent}}">
                                    <CollectionViewSource.SortDescriptions>
                                        <componentModel:SortDescription />
                                    </CollectionViewSource.SortDescriptions>
                                </CollectionViewSource>
                            </FrameworkElement.Resources>
                            <b:Interaction.Behaviors>
                                <toms:PopupFocusManagerBehavior ToggleButton="{Binding ElementName=ToggleButton}" />
                            </b:Interaction.Behaviors>
                            <Border Background="#29323c" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                                <DockPanel>
                                    <CheckBox x:Name="SelectAll" DockPanel.Dock="Top" IsThreeState="True" Content="{TemplateBinding SelectAllContent}" Margin="4,3" Style="{DynamicResource {x:Type CheckBox}}" />
                                    <Border DockPanel.Dock="Top" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                                    <ListBox x:Name="PART_ListBox" ItemsSource="{Binding Source={StaticResource SortedValuesSource}}" Style="{DynamicResource {x:Type ListBox}}" SelectionMode="Extended" BorderThickness="0" Margin="1" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListBoxItem">
                                                            <Grid HorizontalAlignment="Left">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="32" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <CheckBox Grid.Column="0" Margin="3,2" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Style="{DynamicResource {x:Type CheckBox}}" MinWidth="32" MaxWidth="32" HorizontalAlignment="Left" HorizontalContentAlignment="Left" />
                                                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock x:Name="Text" Margin="0,2,0,2" Text="{Binding}" VerticalAlignment="Center" />
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="">
                                                        <Setter TargetName="Text" Property="Text" Value="(Empty)" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <b:Interaction.Behaviors>
                                            <toms:ListBoxSelectAllBehavior AreAllFilesSelected="{Binding IsChecked, ElementName=SelectAll}" />
                                        </b:Interaction.Behaviors>
                                    </ListBox>
                                </DockPanel>
                            </Border>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Filter.Items, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="IsFilterActiveMarker" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ListBox, Path=Items}" Value="1">
                            <Setter TargetName="ToggleButton" Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboboxFilter">
        <Grid>
            <Grid>
                <Control Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" />
                <ComboBox x:Name="ComboBox" Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding SourceValues}" IsEditable="True" FontSize="11" Padding="0" Margin="0,5,-15,0">
                    <ComboBox.RenderTransform>
                        <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                    </ComboBox.RenderTransform>
                </ComboBox>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ComboBox" Property="Text" Value="">
                <Setter TargetName="ComboBox" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger SourceName="ComboBox" Property="Text" Value="{x:Null}">
                <Setter TargetName="ComboBox" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger SourceName="ComboBox" Property="IsMouseOver" Value="True">
                <Setter TargetName="ComboBox" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="ComboBox" Property="IsFocused" Value="True">
                <Setter TargetName="ComboBox" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MultipleChoiceFilter">
        <dgx:MultipleChoiceFilter Filter="{Binding Path=Filter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dgx:DataGridFilterColumnControl}}" />
    </ControlTemplate>

    <Style x:Key="FullRowSelectDataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource DataGridRowMinHeight}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <ui:DataGridCellPresenter
                        Background="{TemplateBinding Background}"
                        CurrencyVisualBrush="{DynamicResource DataGridCurrencyVisualPrimaryBrush}"
                        CurrencyVisualThickness="0"
                        FocusVisualPrimaryBrush="{DynamicResource DataGridCellFocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="0"
                        FocusVisualSecondaryBrush="{DynamicResource DataGridCellFocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="0"
                        IsCurrencyVisualVisible="{TemplateBinding IsSelected}"
                        IsFocusVisualVisible="{TemplateBinding IsKeyboardFocusWithin}"
                        MinHeight="{TemplateBinding MinHeight}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>